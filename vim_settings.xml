<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="F:/scripts/kairosdb.py" timestamp="1530583972634">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="202" column="24" />
      </file>
      <file name="/Dummy.txt" timestamp="1530516651469">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="F:/scripts/Pipfile" timestamp="1530521323529">
        <mark key="[" line="6" column="0" />
        <mark key="]" line="7" column="18" />
      </file>
      <file name="F:/scripts/zgh/check_mysql_last_collect_time.py" timestamp="1530584189461">
        <mark key="'" line="49" column="7" />
        <mark key="[" line="27" column="33" />
        <mark key="]" line="27" column="43" />
        <mark key="^" line="27" column="43" />
        <mark key="." line="27" column="43" />
      </file>
      <file name="F:/scripts/zgh/cassandra_check_ping.py" timestamp="1530583212038">
        <mark key="[" line="14" column="5" />
        <mark key="]" line="14" column="13" />
      </file>
      <file name="F:/scripts/requirements.txt" timestamp="1530583817805">
        <mark key="[" line="8" column="6" />
        <mark key="]" line="7" column="0" />
        <mark key="." line="7" column="0" />
        <mark key="^" line="7" column="4" />
      </file>
    </filemarks>
    <jumps>
      <jump line="61" column="5" filename="F:/scripts/kairosdb.py" />
      <jump line="191" column="0" filename="F:/scripts/kairosdb.py" />
      <jump line="0" column="0" filename="F:/scripts/kairosdb.py" />
      <jump line="6" column="0" filename="F:/scripts/zgh/check_mysql_last_collect_time.py" />
      <jump line="169" column="7" filename="F:/scripts/zgh/check_mysql_last_collect_time.py" />
    </jumps>
    <registers>
      <register name="0" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">aW1wb3J0IGpzb24K</text>
      </register>
      <register name="&quot;" type="4">
        <text>kairosdb_check_data</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">CmZyb20gdG9ybmFkbyBpbXBvcnQgZ2VuCmZyb20gdG9ybmFkbyBpbXBvcnQgaHR0cGNsaWVudApmcm9tIHRvcm5hZG8uaW9sb29wIGltcG9ydCBJT0xvb3AKZnJvbSB0b3JuYWRvLnF1ZXVlcyBpbXBvcnQgUXVldWUK</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Y2hlY2tfcSA9IFF1ZXVlKG1heHNpemU9NSkK</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">ZmV0Y2hfcSA9IFF1ZXVlKG1heHNpemU9NSkK</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">ZW5kX2Fic29sdXRlID0gdG9kYXlfdGltZXN0YW1wICogMTAwMCAtIDI4ODAwMDAwCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">c3RhcnRfYWJzb2x1dGUgPSB0b2RheV90aW1lc3RhbXAgKiAxMDAwIC0gMTE1MjAwMDAwCg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">dG9kYXlfdGltZXN0YW1wID0gY2FsZW5kYXIudGltZWdtKHRvZGF5LnRpbWV0dXBsZSgpKQo=</text>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="-" type="4">
        <text>kairosdb_check_data</text>
      </register>
    </registers>
    <search>
      <last-dir>0</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search />
      <history-cmd />
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>